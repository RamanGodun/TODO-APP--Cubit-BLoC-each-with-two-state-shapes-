import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import '../app_settings_on_cubit/app_settings_cubit.dart';
import '../models/todo_model.dart';
import '../utils/bloc_exports.dart';
import '../utils/cubits_export.dart';

/// üè≠ [SearchAndFilterTodoFactory] –¥–∏–Ω–∞–º—ñ—á–Ω–æ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç—Ä—ñ–±–Ω–∏–π [SearchAndFilterTodoManager]
/// –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –∑–Ω–∞—á–µ–Ω–Ω—è [isUsingBlocForAppFeatures] –∑ [AppSettingsCubit].
class SearchAndFilterTodoFactory {
  static SearchAndFilterTodoManager create(BuildContext context) {
    final isUsingBlocForAppFeatures =
        context.read<AppSettingsCubit>().state.isUsingBlocForAppFeatures;

    return isUsingBlocForAppFeatures
        ? BlocSearchAndFilterTodoManager(context)
        : CubitSearchAndFilterTodoManager(context);
  }
}

/// üî¢ [SearchAndFilterTodoManager] –≤–∏–∑–Ω–∞—á–∞—î –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø–æ—à—É–∫–æ–º —Ç–∞ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—î—é [TODO].
/// –ü—ñ–¥—Ç—Ä–∏–º—É—î —è–∫ BLoC, —Ç–∞–∫ —ñ Cubit —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å—Ç–∞–Ω–æ–º.
abstract class SearchAndFilterTodoManager {
  void setSearchTerm(String searchTerm);
  void changeFilter(Filter filter);
  Filter get currentFilter;
}

/// üö¶ BLoC —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—è [SearchAndFilterTodoManager].
class BlocSearchAndFilterTodoManager implements SearchAndFilterTodoManager {
  final BuildContext _context;

  BlocSearchAndFilterTodoManager(this._context);

  @override
  void setSearchTerm(String searchTerm) {
    _context
        .read<TodoSearchBloc>()
        .add(SetSearchTermEvent(newSearchTerm: searchTerm));
  }

  @override
  void changeFilter(Filter filter) {
    _context.read<TodoFilterBloc>().add(ChangeFilterEvent(newFilter: filter));
  }

  @override
  Filter get currentFilter => _context.watch<TodoFilterBloc>().state.filter;
}

/// üö¶ Cubit —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—è [SearchAndFilterTodoManager].
class CubitSearchAndFilterTodoManager implements SearchAndFilterTodoManager {
  final BuildContext _context;

  CubitSearchAndFilterTodoManager(this._context);

  @override
  void setSearchTerm(String searchTerm) {
    _context.read<TodoSearchCubit>().setSearchTerm(searchTerm);
  }

  @override
  void changeFilter(Filter filter) {
    _context.read<TodoFilterCubit>().changeFilter(filter);
  }

  @override
  Filter get currentFilter => _context.watch<TodoFilterCubit>().state.filter;
}
